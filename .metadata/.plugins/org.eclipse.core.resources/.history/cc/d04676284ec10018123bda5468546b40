package Fibonacci;

public class Fib {
	public static void main(String[] args){
		long t0 = System.nanoTime();
		
		int N = 20;
		
		long t1 = System.nanoTime();
		
		int N1 = fib_reuse(N);
		
		long t2 = System.nanoTime();
		
		int N2 = fib_noReuse(N);
		
		long t3 = System.nanoTime();
		
		System.out.println("Initialization	: " + (t1-t0)/1000 + "ms. N = " + N);
		System.out.println("Fib reuse	: " + (t2-t1)/1000 + "ms. N1 =" + N1);
		System.out.println("Fib no reuse	: " + (t3-t2)/1000 + "ms. N2 =" + N2);
	}
	
	public static int fib_noReuse(int n){
		if(n == 1)
			return 0;
		
		if(n == 2)
			return 1;
		
		return fib_noReuse(n-1) + fib_noReuse(n-2);
	}
	
	public static int fib_reuse(int n){
		if(n == 1)
			return 0;
		
		if(n == 2)
			return 1;
		
		int[] fibs = new int[n];
		for(int i = 2; i < n; i++)
			fibs[i] = -1;
		
		if(fibs[n-1] == -1){
			fibs[n-1] = fib_reuse(n-1) + fib_reuse(n-2);
		}
		
		return fibs[n-1];		
	}
}
